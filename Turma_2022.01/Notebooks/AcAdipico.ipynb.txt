{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "AcAdipico.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Fluxograma do ácido adípico"
      ],
      "metadata": {
        "id": "iCnWVvRX7OV0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Apresentação \n",
        "\n",
        "Esse notebook demonstra a formulação e a solução do balanço material para o processo hipotético do ácido adípico descrito por Murphy (2005, Exemplo 2.15) utlizando [o pacote simbólico Sympy](http://sympy.org/en/index.html)."
      ],
      "metadata": {
        "id": "JoCneTm07YA1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Problema proposto"
      ],
      "metadata": {
        "id": "Ti6FWiOF9Lkf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "[ácido adípico](http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=196) (C<sub>6</sub>H<sub>10</sub>O<sub>4</sub>) raramente ocorre na natureza, mas aproximadamente 2.5 bilhões de kilogramas são produzidos por ano a partir de matérias-primas petroquímicas principalmente para a produção de nylon.\n",
        "\n",
        "<img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Adipic-acid-3D-balls.png/320px-Adipic-acid-3D-balls.png\" width = 200px/>\n",
        "\n",
        "Recentemente tem tido um interesse em produzir [ácido adípico a partir de fontes renováveis](http://www.ihs.com/products/chemical/technology/pep/bio-based-adipic-acid.aspx). [Por exemplo, começando pela glicose](http://pubs.acs.org/doi/abs/10.1021/ja00080a057) (C<sub>6</sub>H<sub>12</sub>O<sub>6</sub>), ácido mucônico (C<sub>6</sub>H<sub>6</sub>O<sub>4</sub>) é produzido pela fermentação com a bactérica geneticamente modificada  e. coli. via a reação\n",
        "\n",
        "<sup>7</sup>&frasl;<sub>3</sub> C<sub>6</sub>H<sub>12</sub>O<sub>6</sub> + <sup>17</sup>&frasl;<sub>2</sub> O<sub>2</sub> &#10141; C<sub>6</sub>H<sub>6</sub>O<sub>4</sub> + 8 CO<sub>2</sub> + 11 H<sub>2</sub>O\n",
        "\n",
        "que é subsequentemente hidrogenada para formar ácido adípico \n",
        "\n",
        "C<sub>6</sub>H<sub>6</sub>O<sub>4</sub> + 2 H<sub>2</sub>  &#10141; C<sub>6</sub>H<sub>10</sub>O<sub>4</sub>\n",
        "\n",
        "Murphy (2005, Exemplo 2.15) ilustra um fluxograma hipotético desse processo:\n",
        "\n",
        "<img src=\"https://github.com/amandalemette/ENG1818/blob/93e1b8c12584e3f633b12edba50a72fe48aaf69b/Imagens/fluxog.png?raw=true\"  width=1000 height=200 />\n",
        "\n",
        "Negligenciando a _E. coli_, vamos determinar os fluxos necessários para produzir 12000 kg/h de ácido adípico assumindo que a glicose está disponível em 10 mg/mL de solução."
      ],
      "metadata": {
        "id": "sSby7_GS9R9o"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Variáveis de Processo"
      ],
      "metadata": {
        "id": "C1RdsJZO_Mae"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "VAmos começar criando labels para as correntes do fluxograma, para os componentes e para os avanços de reação. \n",
        "\n",
        "As abreviações adotadas para as espécies químicas foram:\n",
        "\n",
        "* A: ácido adípico \n",
        "* C: dióxido de carbono\n",
        "* G: glicose\n",
        "* H: hidrogênio\n",
        "* M: ácido mucônico\n",
        "* N: nitrogênio\n",
        "* O: oxigênio\n",
        "* W: água\n",
        "\n",
        "e X<sub>1</sub> e X<sub>2</sub> denotam os graus de avanços das reações 1 e 2, respectivamente. \n",
        "\n",
        "As variáveis correntes denotam os fluxos mássicos em unidade kg/h. \n",
        "\n",
        "Os graus de avanços das reações estão expressos na unidade kg-mol/h.\n",
        "\n",
        "<img src=\"https://github.com/amandalemette/ENG1818/blob/db8a927d537e6cea9cc5e5b973b170073b151d3a/Imagens/fluxog2.png?raw=true\"  width=1000 height=200 />"
      ],
      "metadata": {
        "id": "z4XzERjw_Oha"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cu6Zg1Hd6Gah"
      },
      "outputs": [],
      "source": [
        "# Import the symbolic algebra package sympy\n",
        "import sympy as sym\n",
        "\n",
        "# Extents of reactions 1 and 2\n",
        "sym.var('X1 X2')\n",
        "\n",
        "# Stream variables\n",
        "sym.var('O1 N1')           # Stream 1\n",
        "sym.var('G2 W2')           # Stream 2\n",
        "sym.var('H3')              # Stream 3\n",
        "sym.var('N4 C4')           # Stream 4\n",
        "sym.var('W5')              # Stream 5\n",
        "sym.var('A6')              # Stream 6\n",
        "sym.var('O7 N7 G7 W7')     # Stream 7\n",
        "sym.var('N8 W8 C8 M8')     # Stream 8\n",
        "sym.var('M9')              # Stream 9\n",
        "sym.var('H10 M10')         # Stream 10"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Como o fluxograma inclui reações, será necessário incluir pesos moleculares nas expressões de balanço de massa. Para isso reunimos os pesos moleculares de todas as espécies em um dicionário Python indexado pelas espécies químicas."
      ],
      "metadata": {
        "id": "rWJGOAsJAqCm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "MW = {\n",
        "    'A': 146.14,\n",
        "    'C': 44.01,\n",
        "    'G': 180.16,\n",
        "    'H': 2.02,\n",
        "    'M': 142.11,\n",
        "    'N': 14.01,\n",
        "    'O': 16.00,\n",
        "    'W': 18.02\n",
        "}"
      ],
      "metadata": {
        "id": "vH3ci_GVAvzJ"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Especificações"
      ],
      "metadata": {
        "id": "mp0dcImPA0sb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "<img src=\"https://github.com/amandalemette/ENG1818/blob/db8a927d537e6cea9cc5e5b973b170073b151d3a/Imagens/fluxog2.png?raw=true\"  width=1000 height=200 />"
      ],
      "metadata": {
        "id": "uKd0x2fWA8Es"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "specs = [\n",
        "    sym.Eq(A6, 12000),\n",
        "    sym.Eq(N1/MW['N'], (0.79/0.21)*(O1/MW['O'])),\n",
        "    sym.Eq(G2, 0.01*W2)\n",
        "]"
      ],
      "metadata": {
        "id": "O1debahNAxrO"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Balanço Material"
      ],
      "metadata": {
        "id": "ohM9EAtWBHUC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "<img src=\"https://github.com/amandalemette/ENG1818/blob/db8a927d537e6cea9cc5e5b973b170073b151d3a/Imagens/fluxog2.png?raw=true\"  width=1000 height=200 />"
      ],
      "metadata": {
        "id": "wa5rBJe3BNFR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "mixer1 = [\n",
        "    sym.Eq(0, O1 - O7),\n",
        "    sym.Eq(0, N1 - N7),\n",
        "    sym.Eq(0, G2 - G7),\n",
        "    sym.Eq(0, W2 - W7)\n",
        "]\n",
        "\n",
        "reactor1 = [\n",
        "    sym.Eq(0,  O7 - MW['O']*(17/2)*X1),\n",
        "    sym.Eq(0,  N7 - N8),\n",
        "    sym.Eq(0,  G7 - MW['G']*(7/3)*X1),\n",
        "    sym.Eq(0, -C8 + MW['C']*8*X1),\n",
        "    sym.Eq(0, -M8 + MW['M']*X1),\n",
        "    sym.Eq(0,  W7 - W8 + MW['W']*11*X1)\n",
        "]\n",
        "\n",
        "separator = [\n",
        "    sym.Eq(0, N8 - N4),\n",
        "    sym.Eq(0, C8 - C4),\n",
        "    sym.Eq(0, M8 - M9),\n",
        "    sym.Eq(0, W8 - W5)\n",
        "]\n",
        "\n",
        "mixer2 = [\n",
        "    sym.Eq(0, M9 - M10),\n",
        "    sym.Eq(0, H3 - H10)\n",
        "]\n",
        "\n",
        "reactor2 = [\n",
        "    sym.Eq(0, H10 - MW['H']*2*X2),\n",
        "    sym.Eq(0, M10 - MW['M']*X2),\n",
        "    sym.Eq(0, -A6 + MW['A']*X2)\n",
        "]\n",
        "\n",
        "mbals = mixer1 + reactor1 + separator + mixer2 + reactor2"
      ],
      "metadata": {
        "id": "2Vf-rd-VBJGD"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "specs + mbals"
      ],
      "metadata": {
        "id": "StM0TgKbBgXU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Solução"
      ],
      "metadata": {
        "id": "DrR1f0PpBjlZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "soln = sym.solve(mbals + specs)\n",
        "soln"
      ],
      "metadata": {
        "id": "6_mElveYBk66"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for key in soln.keys():\n",
        "    print(f\"{key}: {soln[key]:.2f} kg/h\")"
      ],
      "metadata": {
        "id": "DYotSeTUBpxT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Referências\n",
        "\n",
        "- Introduction to Chemical Processes : Principles, Analysis, Synthesis by Regina M. Murphy (2005)."
      ],
      "metadata": {
        "id": "rbj7t4yt9FY2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "gK6fSTI99JCZ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}